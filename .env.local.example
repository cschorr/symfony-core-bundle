###############################################################################
# PRODUCTION/STAGING .env.local TEMPLATE
# 
# Copy this file to .env.local and update all values with production secrets
# This file should NEVER be committed to version control
# Place this file in /var/www/globe/shared/.env.local on the server
###############################################################################

###> symfony/framework-bundle ###
# Generate with: php bin/console secrets:generate-keys
APP_SECRET=CHANGE_ME_USE_64_CHAR_RANDOM_STRING
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Production database connection
DATABASE_URL="mysql://db_user:db_password@database:3306/db_name?serverVersion=11.4.2-MariaDB&charset=utf8mb4"
###< doctrine/doctrine-bundle ###

###> lexik/jwt-authentication-bundle ###
# Generate keys with: php bin/console lexik:jwt:generate-keypair
JWT_PASSPHRASE=CHANGE_ME_USE_STRONG_PASSPHRASE
###< lexik/jwt-authentication-bundle ###

###> symfony/mercure-bundle ###
# Generate with: openssl rand -base64 32
MERCURE_JWT_SECRET="CHANGE_ME_USE_STRONG_SECRET_KEY"
###< symfony/mercure-bundle ###

###> sentry/sentry-symfony ###
# Get from your Sentry project settings
SENTRY_DSN="https://YOUR_KEY@YOUR_SENTRY_DOMAIN/YOUR_PROJECT_ID"
SENTRY_ENV=production
###< sentry/sentry-symfony ###

###> MySQL Docker Environment ###
# Strong passwords for database
MYSQL_PASSWORD=CHANGE_ME_STRONG_DB_PASSWORD
MYSQL_ROOT_PASSWORD=CHANGE_ME_STRONG_ROOT_PASSWORD
###< MySQL Docker Environment ###

###> Caddy/Mercure ###
# Should match MERCURE_JWT_SECRET
CADDY_MERCURE_JWT_SECRET="CHANGE_ME_USE_STRONG_SECRET_KEY"
###< Caddy/Mercure ###

###> CORS/Security ###
# Update with your production domain
CORS_ALLOW_ORIGIN='^https://your-domain\.com$'
TRUSTED_HOSTS='^your-domain\.com$'
###< CORS/Security ###

###> Docker Port Configuration ###
# For staging, use non-standard ports to avoid conflicts
HTTP_PORT=8080      # Staging: 8080, Production: 80
HTTPS_PORT=444      # Staging: 444, Production: 443
HTTP3_PORT=444      # Staging: 444, Production: 443
DB_PORT=3307        # Staging: 3307, Production: 3306
###< Docker Port Configuration ###

# Environment-specific variables
SERVER_NAME=your-domain.com  # Or IP address for staging
PRODUCTION_DOMAIN=your-domain.com