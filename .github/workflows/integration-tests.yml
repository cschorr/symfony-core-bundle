name: Integration Tests

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build Docker images
        uses: docker/bake-action@v6
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            php.cache-from=type=gha,scope=php-${{github.ref}}
            php.cache-from=type=gha,scope=php-refs/heads/main
            php.cache-to=type=gha,scope=php-${{github.ref}},mode=max
      -
        name: Start services
        run: docker compose up --wait --no-build --wait-timeout 300
      -
        name: Show container logs on failure
        if: failure()
        run: docker compose logs
      -
        name: Check HTTP reachability
        run: curl -v --fail-with-body http://localhost
      -
        name: Check API reachability
        run: |
          echo "Testing API Platform Swagger UI endpoint..."
          curl -sk --fail-with-body -H "Accept: text/html" https://localhost/api | grep -q "API Platform" && echo "âœ… API Platform documentation accessible"
      -
        name: Check Mercure reachability
        run: curl -vkI --fail-with-body https://localhost/.well-known/mercure?topic=test
      -
        name: Create test database
        run: |
          echo "Creating test database with root privileges..."
          docker compose exec -T database mariadb -u root -p!ChangeMe! -e "CREATE DATABASE IF NOT EXISTS app_test;"
          docker compose exec -T database mariadb -u root -p!ChangeMe! -e "GRANT ALL PRIVILEGES ON app_test.* TO 'app'@'%';"
          docker compose exec -T database mariadb -u root -p!ChangeMe! -e "FLUSH PRIVILEGES;"
      -
        name: Run migrations
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      -
        name: Run PHPUnit
        run: docker compose exec -T php composer test
      -
        name: Doctrine Schema Validator
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          recursive: true
