{
    "openapi": "3.1.0",
    "info": {
        "title": "C3net Core Bundle API Platform",
        "description": "",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        },
        {
            "url": "https://api.example.com",
            "description": "Production API"
        }
    ],
    "paths": {
        "/api/audit-logs": {
            "get": {
                "operationId": "api_audit-logs_get_collection",
                "tags": [
                    "AuditLogs"
                ],
                "responses": {
                    "200": {
                        "description": "AuditLogs collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuditLogs"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AuditLogs.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuditLogs"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of AuditLogs resources.",
                "description": "Retrieves the collection of AuditLogs resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_audit-logs_post",
                "tags": [
                    "AuditLogs"
                ],
                "responses": {
                    "201": {
                        "description": "AuditLogs resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogs"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogs.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogs"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a AuditLogs resource.",
                "description": "Creates a AuditLogs resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new AuditLogs resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuditLogs"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuditLogs.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/AuditLogs"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/audit-logs/{id}": {
            "get": {
                "operationId": "api_audit-logs_id_get",
                "tags": [
                    "AuditLogs"
                ],
                "responses": {
                    "200": {
                        "description": "AuditLogs resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogs"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogs.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogs"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a AuditLogs resource.",
                "description": "Retrieves a AuditLogs resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AuditLogs identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "api_audit-logs_id_put",
                "tags": [
                    "AuditLogs"
                ],
                "responses": {
                    "200": {
                        "description": "AuditLogs resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogs"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogs.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditLogs"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Replaces the AuditLogs resource.",
                "description": "Replaces the AuditLogs resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AuditLogs identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated AuditLogs resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuditLogs"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuditLogs.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/AuditLogs"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "api_audit-logs_id_delete",
                "tags": [
                    "AuditLogs"
                ],
                "responses": {
                    "204": {
                        "description": "AuditLogs resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the AuditLogs resource.",
                "description": "Removes the AuditLogs resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AuditLogs identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/campaigns": {
            "get": {
                "operationId": "api_campaigns_get_collection",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "200": {
                        "description": "Campaign collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Campaign"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Campaign.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Campaign"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Campaign resources.",
                "description": "Retrieves the collection of Campaign resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_campaigns_post",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "201": {
                        "description": "Campaign resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a Campaign resource.",
                "description": "Creates a Campaign resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Campaign resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/campaigns/{id}": {
            "get": {
                "operationId": "api_campaigns_id_get",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "200": {
                        "description": "Campaign resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a Campaign resource.",
                "description": "Retrieves a Campaign resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Campaign identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_campaigns_id_delete",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "204": {
                        "description": "Campaign resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the Campaign resource.",
                "description": "Removes the Campaign resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Campaign identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_campaigns_id_patch",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "200": {
                        "description": "Campaign resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the Campaign resource.",
                "description": "Updates the Campaign resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Campaign identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Campaign resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/categories": {
            "get": {
                "operationId": "api_categories_get_collection",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Category resources.",
                "description": "Retrieves the collection of Category resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0,
                            "maximum": 100
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pagination",
                        "in": "query",
                        "description": "Enable or disable pagination",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_categories_post",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "201": {
                        "description": "Category resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a Category resource.",
                "description": "Creates a Category resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Category resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/categories/{id}": {
            "get": {
                "operationId": "api_categories_id_get",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a Category resource.",
                "description": "Retrieves a Category resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_categories_id_delete",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "204": {
                        "description": "Category resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the Category resource.",
                "description": "Removes the Category resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_categories_id_patch",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the Category resource.",
                "description": "Updates the Category resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Category resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/comments": {
            "get": {
                "operationId": "api_comments_get_collection",
                "tags": [
                    "Comment"
                ],
                "responses": {
                    "200": {
                        "description": "Comment collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment-comment.read"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Comment.jsonld-comment.read"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment-comment.read"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves the collection of Comment resources.",
                "description": "Retrieves the collection of Comment resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "thread.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "thread.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "parent.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "parent.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "order[createdAt]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[id]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_comments_post",
                "tags": [
                    "Comment"
                ],
                "responses": {
                    "201": {
                        "description": "Comment resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment-comment.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment.jsonld-comment.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment-comment.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a Comment resource.",
                "description": "Creates a Comment resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Comment resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment-comment.write"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment.jsonld-comment.write"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment-comment.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/comments/{id}": {
            "get": {
                "operationId": "api_comments_id_get",
                "tags": [
                    "Comment"
                ],
                "responses": {
                    "200": {
                        "description": "Comment resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment-comment.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment.jsonld-comment.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment-comment.read"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a Comment resource.",
                "description": "Retrieves a Comment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_comments_id_delete",
                "tags": [
                    "Comment"
                ],
                "responses": {
                    "204": {
                        "description": "Comment resource deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the Comment resource.",
                "description": "Removes the Comment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_comments_id_patch",
                "tags": [
                    "Comment"
                ],
                "responses": {
                    "200": {
                        "description": "Comment resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment-comment.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment.jsonld-comment.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment-comment.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the Comment resource.",
                "description": "Updates the Comment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Comment resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment-comment.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/companies": {
            "get": {
                "operationId": "api_companies_get_collection",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "200": {
                        "description": "Company collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Company-company.read"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Company.jsonld-company.read"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Company-company.read"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Company resources.",
                "description": "Retrieves the collection of Company resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0,
                            "maximum": 100
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pagination",
                        "in": "query",
                        "description": "Enable or disable pagination",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "companyGroup",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "companyGroup[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "projects",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "projects[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "employees",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "employees[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_companies_post",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "201": {
                        "description": "Company resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company.jsonld-company.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a Company resource.",
                "description": "Creates a Company resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Company resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/companies/{id}": {
            "get": {
                "operationId": "api_companies_id_get",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "200": {
                        "description": "Company resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company.jsonld-company.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a Company resource.",
                "description": "Retrieves a Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_companies_id_delete",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "204": {
                        "description": "Company resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the Company resource.",
                "description": "Removes the Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_companies_id_patch",
                "tags": [
                    "Company"
                ],
                "responses": {
                    "200": {
                        "description": "Company resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company.jsonld-company.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company-company.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the Company resource.",
                "description": "Updates the Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Company resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/company-groups": {
            "get": {
                "operationId": "api_company-groups_get_collection",
                "tags": [
                    "CompanyGroup"
                ],
                "responses": {
                    "200": {
                        "description": "CompanyGroup collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompanyGroup-companyGroup.read"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyGroup.jsonld-companyGroup.read"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompanyGroup-companyGroup.read"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CompanyGroup resources.",
                "description": "Retrieves the collection of CompanyGroup resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_company-groups_post",
                "tags": [
                    "CompanyGroup"
                ],
                "responses": {
                    "201": {
                        "description": "CompanyGroup resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyGroup-companyGroup.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyGroup.jsonld-companyGroup.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyGroup-companyGroup.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a CompanyGroup resource.",
                "description": "Creates a CompanyGroup resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new CompanyGroup resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyGroup"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyGroup.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyGroup"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/company-groups/{id}": {
            "get": {
                "operationId": "api_company-groups_id_get",
                "tags": [
                    "CompanyGroup"
                ],
                "responses": {
                    "200": {
                        "description": "CompanyGroup resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyGroup-companyGroup.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyGroup.jsonld-companyGroup.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyGroup-companyGroup.read"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a CompanyGroup resource.",
                "description": "Retrieves a CompanyGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompanyGroup identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "api_company-groups_id_put",
                "tags": [
                    "CompanyGroup"
                ],
                "responses": {
                    "200": {
                        "description": "CompanyGroup resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyGroup-companyGroup.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyGroup.jsonld-companyGroup.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyGroup-companyGroup.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Replaces the CompanyGroup resource.",
                "description": "Replaces the CompanyGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompanyGroup identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated CompanyGroup resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyGroup"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyGroup.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyGroup"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "api_company-groups_id_delete",
                "tags": [
                    "CompanyGroup"
                ],
                "responses": {
                    "204": {
                        "description": "CompanyGroup resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the CompanyGroup resource.",
                "description": "Removes the CompanyGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CompanyGroup identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/contacts": {
            "get": {
                "operationId": "api_contacts_get_collection",
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Contact collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Contact.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Contact resources.",
                "description": "Retrieves the collection of Contact resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0,
                            "maximum": 100
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pagination",
                        "in": "query",
                        "description": "Enable or disable pagination",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_contacts_post",
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "201": {
                        "description": "Contact resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a Contact resource.",
                "description": "Creates a Contact resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Contact resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/contacts/{id}": {
            "get": {
                "operationId": "api_contacts_id_get",
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Contact resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a Contact resource.",
                "description": "Retrieves a Contact resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_contacts_id_delete",
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "204": {
                        "description": "Contact resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the Contact resource.",
                "description": "Removes the Contact resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_contacts_id_patch",
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Contact resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the Contact resource.",
                "description": "Updates the Contact resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Contact resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/auth": {
            "post": {
                "operationId": "login_check_post",
                "tags": [
                    "Login Check"
                ],
                "responses": {
                    "200": {
                        "description": "User token created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "readOnly": true,
                                            "type": "string",
                                            "nullable": false
                                        }
                                    },
                                    "required": [
                                        "token"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Creates a user token.",
                "description": "Creates a user token.",
                "requestBody": {
                    "description": "The login data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "password": {
                                        "type": "string",
                                        "nullable": false
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/refresh_tokens": {
            "post": {
                "operationId": "api_refresh_tokens_post",
                "tags": [
                    "Login Check"
                ],
                "responses": {
                    "201": {
                        "description": "RefreshToken resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshToken"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshToken.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshToken"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Create a new refresh token",
                "description": "This endpoint allows clients to obtain a new refresh token for authentication purposes.",
                "parameters": [],
                "requestBody": {
                    "description": "The new RefreshToken resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshToken"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshToken.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshToken"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/userinfo": {
            "post": {
                "operationId": "postUserInfo",
                "tags": [
                    "Login Check"
                ],
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "550e8400-e29b-41d4-a716-446655440000"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "john.doe"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "ROLE_USER",
                                                "ROLE_ADMIN"
                                            ]
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "John"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "Doe"
                                        },
                                        "isActive": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "isLocked": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing or invalid Authorization header",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Authorization header with Bearer token required"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Get user information from JWT token",
                "description": "Retrieve user information using a JWT token from Authorization header",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer JWT token",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "example": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ]
            }
        },
        "/api/notifications": {
            "get": {
                "operationId": "api_notifications_get_collection",
                "tags": [
                    "Notification"
                ],
                "responses": {
                    "200": {
                        "description": "Notification collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Notification.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Notification"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Notification resources.",
                "description": "Retrieves the collection of Notification resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_notifications_post",
                "tags": [
                    "Notification"
                ],
                "responses": {
                    "201": {
                        "description": "Notification resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a Notification resource.",
                "description": "Creates a Notification resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Notification resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/notifications/{id}": {
            "get": {
                "operationId": "api_notifications_id_get",
                "tags": [
                    "Notification"
                ],
                "responses": {
                    "200": {
                        "description": "Notification resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a Notification resource.",
                "description": "Retrieves a Notification resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_notifications_id_delete",
                "tags": [
                    "Notification"
                ],
                "responses": {
                    "204": {
                        "description": "Notification resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the Notification resource.",
                "description": "Removes the Notification resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_notifications_id_patch",
                "tags": [
                    "Notification"
                ],
                "responses": {
                    "200": {
                        "description": "Notification resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the Notification resource.",
                "description": "Updates the Notification resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Notification resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/projects": {
            "get": {
                "operationId": "api_projects_get_collection",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Project.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Project resources.",
                "description": "Retrieves the collection of Project resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0,
                            "maximum": 100
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pagination",
                        "in": "query",
                        "description": "Enable or disable pagination",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_projects_post",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "201": {
                        "description": "Project resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a Project resource.",
                "description": "Creates a Project resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Project resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/projects/{id}": {
            "get": {
                "operationId": "api_projects_id_get",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a Project resource.",
                "description": "Retrieves a Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_projects_id_delete",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "204": {
                        "description": "Project resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the Project resource.",
                "description": "Removes the Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_projects_id_patch",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the Project resource.",
                "description": "Updates the Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Project identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Project resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/threads": {
            "get": {
                "operationId": "api_threads_get_collection",
                "tags": [
                    "Thread"
                ],
                "responses": {
                    "200": {
                        "description": "Thread collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Thread-thread.read"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Thread.jsonld-thread.read"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Thread-thread.read"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves the collection of Thread resources.",
                "description": "Retrieves the collection of Thread resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_threads_post",
                "tags": [
                    "Thread"
                ],
                "responses": {
                    "201": {
                        "description": "Thread resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread-thread.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread.jsonld-thread.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread-thread.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a Thread resource.",
                "description": "Creates a Thread resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Thread resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Thread-thread.write"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Thread.jsonld-thread.write"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/Thread-thread.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/threads/{id}": {
            "get": {
                "operationId": "api_threads_id_get",
                "tags": [
                    "Thread"
                ],
                "responses": {
                    "200": {
                        "description": "Thread resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread-thread.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread.jsonld-thread.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread-thread.read"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a Thread resource.",
                "description": "Retrieves a Thread resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Thread identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_threads_id_delete",
                "tags": [
                    "Thread"
                ],
                "responses": {
                    "204": {
                        "description": "Thread resource deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the Thread resource.",
                "description": "Removes the Thread resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Thread identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_threads_id_patch",
                "tags": [
                    "Thread"
                ],
                "responses": {
                    "200": {
                        "description": "Thread resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread-thread.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread.jsonld-thread.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Thread-thread.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the Thread resource.",
                "description": "Updates the Thread resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Thread identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Thread resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Thread-thread.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/users": {
            "get": {
                "operationId": "api_users_get_collection",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of User resources.",
                "description": "Retrieves the collection of User resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_users_post",
                "tags": [
                    "User"
                ],
                "responses": {
                    "201": {
                        "description": "User resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a User resource.",
                "description": "Creates a User resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new User resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/users/{id}": {
            "get": {
                "operationId": "api_users_id_get",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a User resource.",
                "description": "Retrieves a User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_users_id_delete",
                "tags": [
                    "User"
                ],
                "responses": {
                    "204": {
                        "description": "User resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the User resource.",
                "description": "Removes the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_users_id_patch",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the User resource.",
                "description": "Updates the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated User resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/user-groups": {
            "get": {
                "operationId": "api_user-groups_get_collection",
                "tags": [
                    "UserGroup"
                ],
                "responses": {
                    "200": {
                        "description": "UserGroup collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserGroup"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserGroup.jsonld"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserGroup"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of UserGroup resources.",
                "description": "Retrieves the collection of UserGroup resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_user-groups_post",
                "tags": [
                    "UserGroup"
                ],
                "responses": {
                    "201": {
                        "description": "UserGroup resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a UserGroup resource.",
                "description": "Creates a UserGroup resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new UserGroup resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/user-groups/{id}": {
            "get": {
                "operationId": "api_user-groups_id_get",
                "tags": [
                    "UserGroup"
                ],
                "responses": {
                    "200": {
                        "description": "UserGroup resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a UserGroup resource.",
                "description": "Retrieves a UserGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UserGroup identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "api_user-groups_id_put",
                "tags": [
                    "UserGroup"
                ],
                "responses": {
                    "200": {
                        "description": "UserGroup resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup.jsonld"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Replaces the UserGroup resource.",
                "description": "Replaces the UserGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UserGroup identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated UserGroup resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup.jsonld"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroup"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "api_user-groups_id_delete",
                "tags": [
                    "UserGroup"
                ],
                "responses": {
                    "204": {
                        "description": "UserGroup resource deleted"
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the UserGroup resource.",
                "description": "Removes the UserGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UserGroup identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            }
        },
        "/api/votes": {
            "get": {
                "operationId": "api_votes_get_collection",
                "tags": [
                    "Vote"
                ],
                "responses": {
                    "200": {
                        "description": "Vote collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vote-vote.read"
                                    }
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vote.jsonld-vote.read"
                                            }
                                        },
                                        "totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "first": "string",
                                                "last": "string",
                                                "previous": "string",
                                                "next": "string"
                                            }
                                        },
                                        "search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "template": {
                                                    "type": "string"
                                                },
                                                "variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "member"
                                    ]
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vote-vote.read"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves the collection of Vote resources.",
                "description": "Retrieves the collection of Vote resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "api_votes_post",
                "tags": [
                    "Vote"
                ],
                "responses": {
                    "201": {
                        "description": "Vote resource created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote-vote.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote.jsonld-vote.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote-vote.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Creates a Vote resource.",
                "description": "Creates a Vote resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Vote resource",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vote-vote.write"
                            }
                        },
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vote.jsonld-vote.write"
                            }
                        },
                        "application/graphql": {
                            "schema": {
                                "$ref": "#/components/schemas/Vote-vote.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        },
        "/api/votes/{id}": {
            "get": {
                "operationId": "api_votes_id_get",
                "tags": [
                    "Vote"
                ],
                "responses": {
                    "200": {
                        "description": "Vote resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote-vote.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote.jsonld-vote.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote-vote.read"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Retrieves a Vote resource.",
                "description": "Retrieves a Vote resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vote identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "api_votes_id_delete",
                "tags": [
                    "Vote"
                ],
                "responses": {
                    "204": {
                        "description": "Vote resource deleted"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Removes the Vote resource.",
                "description": "Removes the Vote resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vote identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "api_votes_id_patch",
                "tags": [
                    "Vote"
                ],
                "responses": {
                    "200": {
                        "description": "Vote resource updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote-vote.read"
                                }
                            },
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote.jsonld-vote.read"
                                }
                            },
                            "application/graphql": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote-vote.read"
                                }
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "422": {
                        "description": "An error occurred",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation.jsonld-jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstraintViolation-json"
                                }
                            }
                        },
                        "links": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error.jsonld"
                                }
                            },
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "links": {}
                    }
                },
                "summary": "Updates the Vote resource.",
                "description": "Updates the Vote resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vote identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Vote resource",
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vote-vote.write"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "AuditLogs": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "resource": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "action": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "author": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "data": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "previousData": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "AuditLogs.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "resource": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "action": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "author": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "data": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "previousData": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "Campaign": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "startedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "endedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Campaign.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "startedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "endedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Category": {
                "type": "object",
                "description": "Nested categories.",
                "deprecated": false,
                "properties": {
                    "root": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "parent": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "color": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "campaigns": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Category-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Category.jsonld": {
                "type": "object",
                "description": "Nested categories.",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "root": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "parent": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "color": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "campaigns": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Category.jsonld-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Comment-comment.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "thread": {
                        "$ref": "#/components/schemas/Thread-comment.read"
                    },
                    "parent": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Comment-comment.read"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "content": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "author": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "upCount": {
                        "default": 0,
                        "example": 0,
                        "type": "integer"
                    },
                    "downCount": {
                        "default": 0,
                        "example": 0,
                        "type": "integer"
                    },
                    "score": {
                        "default": 0,
                        "example": 0,
                        "type": "integer"
                    }
                },
                "required": [
                    "content"
                ]
            },
            "Comment-comment.write": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "thread": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "parent": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Comment-comment.write"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "content": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    }
                },
                "required": [
                    "content"
                ]
            },
            "Comment.jsonld-comment.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "thread": {
                        "$ref": "#/components/schemas/Thread.jsonld-comment.read"
                    },
                    "parent": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Comment.jsonld-comment.read"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "content": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "author": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "upCount": {
                        "default": 0,
                        "example": 0,
                        "type": "integer"
                    },
                    "downCount": {
                        "default": 0,
                        "example": 0,
                        "type": "integer"
                    },
                    "score": {
                        "default": 0,
                        "example": 0,
                        "type": "integer"
                    }
                },
                "required": [
                    "content"
                ]
            },
            "Comment.jsonld-comment.write": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "thread": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "parent": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Comment.jsonld-comment.write"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "content": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    }
                },
                "required": [
                    "content"
                ]
            },
            "Company": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "companyGroup": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "employees": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "nameExtension": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "cell": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "street": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "zip": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "countryCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Company-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "companyGroup": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CompanyGroup-company.read"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project-company.read"
                        }
                    },
                    "employees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User-company.read"
                        }
                    },
                    "category": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Category-company.read"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Company.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "companyGroup": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "employees": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "nameExtension": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "cell": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "street": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "zip": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "countryCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Company.jsonld-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "companyGroup": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CompanyGroup.jsonld-company.read"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project.jsonld-company.read"
                        }
                    },
                    "employees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User.jsonld-company.read"
                        }
                    },
                    "category": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Category.jsonld-company.read"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "CompanyGroup": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "companies": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "CompanyGroup-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "CompanyGroup-companyGroup.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "companies": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    }
                }
            },
            "CompanyGroup.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "companies": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "CompanyGroup.jsonld-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "CompanyGroup.jsonld-companyGroup.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    }
                }
            },
            "ConstraintViolation-json": {
                "type": "object",
                "description": "Unprocessable entity",
                "deprecated": false,
                "properties": {
                    "status": {
                        "default": 422,
                        "example": 422,
                        "type": "integer"
                    },
                    "violations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "propertyPath": {
                                    "type": "string",
                                    "description": "The property path of the violation"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The message associated with the violation"
                                }
                            }
                        }
                    },
                    "detail": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "instance": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "ConstraintViolation.jsonld-jsonld": {
                "type": "object",
                "description": "Unprocessable entity",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "default": 422,
                        "example": 422,
                        "type": "integer"
                    },
                    "violations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "propertyPath": {
                                    "type": "string",
                                    "description": "The property path of the violation"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The message associated with the violation"
                                }
                            }
                        }
                    },
                    "detail": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "instance": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "Contact": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "nameLast": {
                        "type": "string"
                    },
                    "nameFirst": {
                        "type": "string"
                    },
                    "academicTitle": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "cell": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "street": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "zip": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "countryCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "fullName": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "formalFullName": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Contact.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "nameLast": {
                        "type": "string"
                    },
                    "nameFirst": {
                        "type": "string"
                    },
                    "academicTitle": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "cell": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "street": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "zip": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "countryCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "fullName": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "formalFullName": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Error": {
                "type": "object",
                "description": "A representation of common errors.",
                "deprecated": false,
                "properties": {
                    "title": {
                        "readOnly": true,
                        "description": "A short, human-readable summary of the problem.",
                        "type": "string"
                    },
                    "detail": {
                        "readOnly": true,
                        "description": "A human-readable explanation specific to this occurrence of the problem.",
                        "type": "string"
                    },
                    "status": {
                        "type": "number",
                        "examples": [
                            404
                        ],
                        "default": 400
                    },
                    "instance": {
                        "readOnly": true,
                        "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "type": {
                        "readOnly": true,
                        "description": "A URI reference that identifies the problem type",
                        "type": "string"
                    }
                }
            },
            "Error.jsonld": {
                "type": "object",
                "description": "A representation of common errors.",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "readOnly": true,
                        "description": "A short, human-readable summary of the problem.",
                        "type": "string"
                    },
                    "detail": {
                        "readOnly": true,
                        "description": "A human-readable explanation specific to this occurrence of the problem.",
                        "type": "string"
                    },
                    "status": {
                        "type": "number",
                        "examples": [
                            404
                        ],
                        "default": 400
                    },
                    "instance": {
                        "readOnly": true,
                        "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "type": {
                        "readOnly": true,
                        "description": "A URI reference that identifies the problem type",
                        "type": "string"
                    },
                    "description": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "Notification": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "project": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Notification.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "project": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Project": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "status": {
                        "default": "planning",
                        "example": "planning",
                        "type": "string",
                        "enum": [
                            "planning",
                            "in_progress",
                            "on_hold",
                            "completed",
                            "cancelled"
                        ]
                    },
                    "assignee": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "client": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "campaign": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "endedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "inProgress": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "completed": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "cancelled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "planning": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onHold": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Project-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Project.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "default": "planning",
                        "example": "planning",
                        "type": "string",
                        "enum": [
                            "planning",
                            "in_progress",
                            "on_hold",
                            "completed",
                            "cancelled"
                        ]
                    },
                    "assignee": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "client": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "campaign": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "startedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "endedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "inProgress": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "completed": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "cancelled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "planning": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onHold": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Project.jsonld-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "RefreshToken": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "refreshToken": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "valid": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "RefreshToken.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "refreshToken": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "valid": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Thread-comment.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "resourceType"
                ],
                "properties": {
                    "resourceType": {
                        "type": "string",
                        "enum": [
                            "category",
                            "company",
                            "company_group",
                            "contact",
                            "notification",
                            "project",
                            "project_status",
                            "thread",
                            "user",
                            "user_group"
                        ]
                    },
                    "resourceId": {
                        "type": "string"
                    }
                }
            },
            "Thread-thread.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "resourceType"
                ],
                "properties": {
                    "resourceType": {
                        "type": "string",
                        "enum": [
                            "category",
                            "company",
                            "company_group",
                            "contact",
                            "notification",
                            "project",
                            "project_status",
                            "thread",
                            "user",
                            "user_group"
                        ]
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "title": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "Thread-thread.write": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "resourceType"
                ],
                "properties": {
                    "resourceType": {
                        "type": "string",
                        "enum": [
                            "category",
                            "company",
                            "company_group",
                            "contact",
                            "notification",
                            "project",
                            "project_status",
                            "thread",
                            "user",
                            "user_group"
                        ]
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "title": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "Thread.jsonld-comment.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "resourceType"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string",
                        "enum": [
                            "category",
                            "company",
                            "company_group",
                            "contact",
                            "notification",
                            "project",
                            "project_status",
                            "thread",
                            "user",
                            "user_group"
                        ]
                    },
                    "resourceId": {
                        "type": "string"
                    }
                }
            },
            "Thread.jsonld-thread.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "resourceType"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string",
                        "enum": [
                            "category",
                            "company",
                            "company_group",
                            "contact",
                            "notification",
                            "project",
                            "project_status",
                            "thread",
                            "user",
                            "user_group"
                        ]
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "title": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "Thread.jsonld-thread.write": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "required": [
                    "resourceType"
                ],
                "properties": {
                    "resourceType": {
                        "type": "string",
                        "enum": [
                            "category",
                            "company",
                            "company_group",
                            "contact",
                            "notification",
                            "project",
                            "project_status",
                            "thread",
                            "user",
                            "user_group"
                        ]
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "title": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "User": {
                "type": "object",
                "description": "Represents a user in the system, with roles and permissions.",
                "deprecated": false,
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "company": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "userGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "locked": {
                        "default": false,
                        "example": false,
                        "type": "boolean"
                    },
                    "lastLogin": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "passwordResetToken": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "passwordResetTokenExpiresAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "roles": {
                        "description": "Security-compatible roles as strings.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        }
                    },
                    "auditLogs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "cell": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "nameLast": {
                        "type": "string"
                    },
                    "nameFirst": {
                        "type": "string"
                    },
                    "academicTitle": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "userIdentifier": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "rolesFromEnums": {
                        "writeOnly": true,
                        "description": "Replace direct user roles with enums.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        }
                    },
                    "roleEnums": {
                        "readOnly": true,
                        "description": "Read direct user roles as enums (does not include roles from groups).",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        }
                    },
                    "fullName": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "formalFullName": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "User-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "User.jsonld": {
                "type": "object",
                "description": "Represents a user in the system, with roles and permissions.",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "company": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "userGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "locked": {
                        "default": false,
                        "example": false,
                        "type": "boolean"
                    },
                    "lastLogin": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "passwordResetToken": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "passwordResetTokenExpiresAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "roles": {
                        "description": "Security-compatible roles as strings.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        }
                    },
                    "auditLogs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "cell": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "nameLast": {
                        "type": "string"
                    },
                    "nameFirst": {
                        "type": "string"
                    },
                    "academicTitle": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "userIdentifier": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "rolesFromEnums": {
                        "writeOnly": true,
                        "description": "Replace direct user roles with enums.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        }
                    },
                    "roleEnums": {
                        "readOnly": true,
                        "description": "Read direct user roles as enums (does not include roles from groups).",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        }
                    },
                    "fullName": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "formalFullName": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "User.jsonld-company.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "UserGroup": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        },
                        "uniqueItems": true,
                        "description": "Stored as list of strings in DB; use helper methods to work with enums."
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "rolesFromEnums": {
                        "writeOnly": true,
                        "description": "Replace roles using enums.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        }
                    },
                    "usersArray": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "UserGroup.jsonld": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        },
                        "uniqueItems": true,
                        "description": "Stored as list of strings in DB; use helper methods to work with enums."
                    },
                    "category": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "deletedAt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "default": "",
                        "example": "",
                        "type": "string"
                    },
                    "rolesFromEnums": {
                        "writeOnly": true,
                        "description": "Replace roles using enums.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ROLE_USER",
                                "ROLE_ADMIN",
                                "ROLE_MODERATOR",
                                "ROLE_SUPER_ADMIN",
                                "ROLE_ALLOWED_TO_SWITCH",
                                "ROLE_MANAGER",
                                "ROLE_TEAMLEAD",
                                "ROLE_FINANCE",
                                "ROLE_QUALITY",
                                "ROLE_PROJECT_MANAGEMENT",
                                "ROLE_EDITOR",
                                "ROLE_EXTERNAL",
                                "ROLE_CONTENT_CREATOR"
                            ]
                        }
                    },
                    "usersArray": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference",
                            "example": "https://example.com/"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "updatedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "deletedBy": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted": {
                        "readOnly": true,
                        "description": "Check if the entity has been soft deleted.",
                        "type": "boolean"
                    }
                }
            },
            "Vote-vote.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "comment": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "voter": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "value": {
                        "enum": [
                            -1,
                            1
                        ],
                        "default": 1,
                        "example": 1,
                        "type": "integer"
                    }
                }
            },
            "Vote-vote.write": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "comment": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "value": {
                        "enum": [
                            -1,
                            1
                        ],
                        "default": 1,
                        "example": 1,
                        "type": "integer"
                    }
                }
            },
            "Vote.jsonld-vote.read": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "comment": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "voter": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "value": {
                        "enum": [
                            -1,
                            1
                        ],
                        "default": 1,
                        "example": 1,
                        "type": "integer"
                    }
                }
            },
            "Vote.jsonld-vote.write": {
                "type": "object",
                "description": "",
                "deprecated": false,
                "properties": {
                    "comment": {
                        "type": "string",
                        "format": "iri-reference",
                        "example": "https://example.com/"
                    },
                    "value": {
                        "enum": [
                            -1,
                            1
                        ],
                        "default": 1,
                        "example": 1,
                        "type": "integer"
                    }
                }
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {},
        "securitySchemes": {
            "JWT": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "JWT": []
        }
    ],
    "tags": [
        {
            "name": "AuditLogs"
        },
        {
            "name": "Campaign"
        },
        {
            "name": "Category",
            "description": "Nested categories."
        },
        {
            "name": "Comment"
        },
        {
            "name": "Company"
        },
        {
            "name": "CompanyGroup"
        },
        {
            "name": "Contact"
        },
        {
            "name": "Notification"
        },
        {
            "name": "Project"
        },
        {
            "name": "Login Check"
        },
        {
            "name": "Thread"
        },
        {
            "name": "User",
            "description": "Represents a user in the system, with roles and permissions."
        },
        {
            "name": "UserGroup"
        },
        {
            "name": "Vote"
        }
    ],
    "webhooks": {}
}
